create table carts(
id bigint primary key auto_increment
);

create table favourites(
id bigint primary key auto_increment
);

create table orderStates(
id bigint primary key auto_increment,
state varchar(30) default 'Pending'
);


create table paymentMethods(
id bigint primary key auto_increment,
method varchar(30) not null
);

create table restaurant(
id int primary key auto_increment,
name varchar(20) not null,
email varchar(40) not null,
password varchar(20) not null,
address varchar(20) not null,
phone varchar(11) not null
);

create table categories(
id bigint primary key auto_increment,
restaurantId int NOT NULL,
categoryName varchar(30) NOT NULL,
foreign key(restaurantId) references restaurant(id)
);

create table products(
id bigint primary key auto_increment not null,
name varchar(20) not null,
description varchar(100) default null,
price float not null,
categoryId bigint not null,
foreign key(categoryId) references categories(id)
);


create table coupons(
id bigint primary key auto_increment,
priceCut int not null,
restaurantId int not null,
foreign key(restaurantId) references restaurant(id)
);

create table users(
id bigint primary key auto_increment not null,
name varchar(20) not null,
surname varchar(20) not null,
email varchar(40) not null,
password varchar(20) not null,
favId bigint not null,
cartId bigint default null,
FOREIGN KEY (favId) references favourites(id),
FOREIGN KEY (cartId) references carts(id)
);

create table reviews(
id bigint primary key auto_increment,
stars int default null,
comment varchar(100) default null,
userId bigint not null,
productId bigint not null,
foreign key(userId) references users(id),
foreign key(productId) references products(id)
);

create table shippingAddresses(
id bigint primary key auto_increment,
cap int not null,
city varchar(20) not null,
street varchar(20) not null,
homeNumber int not null,
userId bigint not null,
FOREIGN KEY (userId) references users(id)
);

create table users_paymentMethods(
id bigint primary key auto_increment,
userId bigint not null,
paymentId bigint not null,
cardNumber int,
expirationDate DateTime,
cvv int not null,
cardHolder varchar(40),
foreign key(userId) references users(id),
foreign key(paymentId) references paymentMethods(id)
);

create table orders(
id bigint primary key auto_increment,
creationDate datetime not null,
total float not null,
arrivalTime datetime not null,
couponId bigint,
userId bigint,
paymentId bigint,
restaurantId int,
stateId bigint,
foreign key(userId) references users(id),
foreign key(paymentId) references paymentMethods(id),
foreign key(restaurantId) references restaurant(id),
foreign key(couponId) references coupons(id),
foreign key(stateId) references orderStates(id)
);


create table products_carts(
id bigint auto_increment primary key,
productId bigint,
cartId bigint default null,
quantity int default 0,
foreign key(productId) references products(id),
foreign key(cartId) references carts(id)
);

create table orders_products(
id bigint primary key auto_increment,
orderId bigint,
quantity int default 1,
name varchar(20) not null,
description varchar(100) default null,
price float not null,
foreign key(orderId) references orders(id)
);

create table products_favourites(
id bigint primary key auto_increment,
favId bigint,
productId bigint,
foreign key(favId) references favourites(id),
foreign key(productId) references products(id)
);

create table users_coupons(
id bigint primary key auto_increment,
userId bigint,
couponId bigint,
quantity int default 1,
foreign key(userId) references users(id),
foreign key(couponId) references coupons(id)
);

insert into restaurant values(NULL, "TasteIt", "tasteit@gmail.com", "secret", "Via Roma, 12", 1234567890);


ALTER DATABASE tasteIt CHARACTER SET utf8 COLLATE utf8_general_ci;
